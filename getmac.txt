#include <iostream>
#include <cstring>
#include <sys/ioctl.h>
#include <net/if.h>
#include <unistd.h>
#include <arpa/inet.h>

std::string get_mac_address(const std::string& interface_name) {
    int fd = socket(AF_INET, SOCK_DGRAM, 0);
    if (fd == -1) {
        perror("socket");
        return "";
    }

    struct ifreq ifr;
    std::strncpy(ifr.ifr_name, interface_name.c_str(), IFNAMSIZ - 1);

    if (ioctl(fd, SIOCGIFHWADDR, &ifr) == -1) {
        perror("ioctl");
        close(fd);
        return "";
    }

    close(fd);

    unsigned char* mac = reinterpret_cast<unsigned char*>(ifr.ifr_hwaddr.sa_data);
    char mac_str[18];
    std::snprintf(mac_str, sizeof(mac_str), "%02X:%02X:%02X:%02X:%02X:%02X",
                  mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]);

    return std::string(mac_str);
}

int main() {
    std::string interface = "eth0";  // hoặc "wlan0" tùy card mạng
    std::string mac = get_mac_address(interface);

    if (!mac.empty()) {
        std::cout << "MAC Address của " << interface << " là: " << mac << std::endl;
    } else {
        std::cout << "Không thể lấy MAC Address." << std::endl;
    }

    return 0;
}
